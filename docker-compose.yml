services:

  ping:
    build:
      context: frontend
      args:
        - NEXT_PUBLIC_REDIRECT_URI=${REDIRECT_URI}
        - NEXT_PUBLIC_CLIENT_ID=${CLIENT_ID}
        - CLIENT_SECRET=${CLIENT_SECRET}
    restart: always

  pong:
    build: backend
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./backend/media:/media
      - ./backend/static:/static
    ports:
      - 6969:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  postgres:
    image: postgres
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: always

  redis:
    image: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: always

  nginx:
    image: nginx
    ports:
      - 3000:3000
      - 8000:8000
    volumes:
      - ./backend/static:/static:ro
      - ./backend/media:/media:ro
      - ./nginx/ft_transcendence.conf:/etc/nginx/conf.d/ft_transcendence.conf
      - ./nginx/certificates:/certificates
    depends_on:
      - ping
      - pong
    restart: always
